// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections;
using System.Collections.Generic;

using AVFoundation; 
using CoreGraphics; 
using Foundation;
using UIKit;
using AudioToolbox;

namespace FinanceCalculator
{
	public partial class MoreAppsController : UITableViewController
	{
		public MoreAppsController(IntPtr handle) : base(handle)
		{
		}

		public MoreAppsController() { }
		List<string> applicationName = new List<string>() { { "Learning French!" } };

		//categories of applications on the app store
		List<string> applicationCategories = new List<string>() { 
			{"\ud83d\udcda Education"}, {"\ud83d\udd79 Games"}, {"\ud83c\udf0e Navigation"}, {"\ud83d\udc60 Shopping"}, {"\ud83c\udfb7 Music"}, {"\ud83d\udee9 Travel"}

		};
 		List<string> appIcons = new List<string>() { 
			//french phrase book app
			{"iPadAppIcon.png"}
		};

		public override UITableViewCell GetCell(UITableView tableView, Foundation.NSIndexPath indexPath)
		{
			UITableViewCell moreApps = tableView.DequeueReusableCell("moreApps");

			if (moreApps == null)
			{
				moreApps = new UITableViewCell(UITableViewCellStyle.Subtitle, "moreApps");
			}


			switch(indexPath.Section) {
				
				case 0:
					moreApps.TextLabel.Text = applicationName[indexPath.Row];
					moreApps.TextLabel.TextColor = UIColor.Gray;

					//french phrase book app
					UIImage appIconFrenchBook = UIImage.FromFile(appIcons[0]);

					UIImageView imageFrench = new UIImageView(appIconFrenchBook, appIconFrenchBook);
					imageFrench.Frame = new CGRect(0, 0, 40, 40);
					imageFrench.UserInteractionEnabled = false;

					moreApps.AccessoryView = imageFrench;

					break;

				default:
					break;
			}

			return moreApps;
		}


		public override nint RowsInSection(UITableView tableView, nint section)
		{
			return this.applicationName.Count;
		}

		private void AISpeech(string textSpeak, float speechRate)
		{
			AVSpeechSynthesizer speech = new AVSpeechSynthesizer();

			AVSpeechUtterance speechUtterance = new AVSpeechUtterance(textSpeak)
			{
				Rate = AVSpeechUtterance.MaximumSpeechRate / speechRate,
				Voice = AVSpeechSynthesisVoice.FromLanguage("en-US"),
				Volume = 1.0f,
				PitchMultiplier = 1.0f
			};

			speech.SpeakUtterance(speechUtterance);
		}

		private void chooseApp(string title, string message)
		{
			UIAlertController chooseAppController = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert);

			//user chooses to look at the other apps
			UIAlertAction confirmed = UIAlertAction.Create("Yes", UIAlertActionStyle.Default, (Action) =>
			{
				NSUrl linkToPhraseBook = NSUrl.FromString("");
				if (UIApplication.SharedApplication.CanOpenUrl(linkToPhraseBook) == true)
				{
					UIApplication.SharedApplication.OpenUrl(linkToPhraseBook);
					chooseAppController.Dispose();
				}
				else if (UIApplication.SharedApplication.CanOpenUrl(linkToPhraseBook) == false)
				{


					if (chooseAppController.IsBeingDismissed == true)
					{
						chooseAppController.Dispose();

						UIAlertController noInternetController = UIAlertController.Create("No Internet", "Seems we could not connect you to the App Store. Check your internet connection and try again", UIAlertControllerStyle.Alert);

						UIAlertAction confirmedInternet = UIAlertAction.Create("Ok", UIAlertActionStyle.Default, (Action_2) =>
						{
							noInternetController.Dispose();
						});

						noInternetController.AddAction(confirmedInternet);

						if (this.PresentedViewController == null)
						{
							this.PresentViewController(noInternetController, true, null);
						}
						else if (this.PresentedViewController != null)
						{
							this.PresentedViewController.DismissViewController(true, () =>
							{
								this.PresentedViewController.Dispose();
								this.PresentViewController(noInternetController, true, null);
							});
						}
					}
					else if (chooseAppController.IsBeingDismissed == false)
					{
						Console.WriteLine("App Controller is not being dismissed");
					}
				}
			});

			UIAlertAction denied = UIAlertAction.Create("Maybe Later", UIAlertActionStyle.Destructive, (Action) =>
			{
				chooseAppController.Dispose();
			});

			chooseAppController.AddAction(confirmed);
			chooseAppController.AddAction(denied);

			if (this.PresentedViewController == null)
			{
				this.PresentViewController(chooseAppController, true, null);
			}
			else if (this.PresentedViewController != null)
			{
				this.PresentedViewController.DismissViewController(true, () =>
				{
					this.PresentedViewController.Dispose();
					this.PresentViewController(chooseAppController, true, null);
				});
			}

		}

		public override nint NumberOfSections(UITableView tableView)
		{
			return this.applicationCategories.Count; 
		}

		public override string TitleForHeader(UITableView tableView, nint section)
		{
			switch(section) {
				case 0:
					return this.applicationCategories[0];
					break;
				
				case 1:
					return this.applicationCategories[1];
					break;

				case 2:
					return this.applicationCategories[2];

					break;
				
				case 3:
					return this.applicationCategories[3];

					break;
				
				case 4:
					return this.applicationCategories[4];
					break;
				
				case 5:
					return this.applicationCategories[5];
					break;	
			}
			return "";
		}

		public override void RowSelected(UITableView tableView, Foundation.NSIndexPath indexPath)
		{
			switch(indexPath.Section) {
				case 0:
				switch (indexPath.Row)
				{
					case 0:
					chooseApp("Learning French!", "This app is a french phrase book that contains over 500 phrases. It will aid you in your pursuit of mastering french. And it's free!");
						break;
					default:
						break;
					}
					break;
				
					default:
						break;

			}
			tableView.DeselectRow(indexPath, true);
		}


		private void generalController(string title, string message)
		{
			UIAlertController general = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert);

			UIAlertAction confirmed = UIAlertAction.Create("Ok", UIAlertActionStyle.Default, (Action) =>
			{
				general.Dispose();
			});

			general.AddAction(confirmed);

			if (this.PresentedViewController == null)
			{
				this.PresentViewController(general, true, null);
			}

			else if (this.PresentedViewController != null)
			{
				this.PresentedViewController.DismissViewController(true, () =>
				{
					this.PresentedViewController.Dispose();
					this.PresentViewController(general, true, null);
				});
			}
		}

		public override void ViewDidLoad()
		{
			generalController("Check out more of my apps", "All of these are available on the App Store");

			this.TableView.RowHeight = 70.0f;
			this.View.BackgroundColor = UIColor.White; 
		}
	}
}
